{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>PDF scientific paper translation and bilingual comparison library.</p> <ul> <li>Online Service: Beta version launched Immersive Translate - BabelDOC 1000 free pages per month.</li> <li>Self-deployment: PDFMathTranslate 1.9.3+ Experimental support for BabelDOC, available for self-deployment + WebUI with more translation services.</li> <li>Provides a simple command line interface.</li> <li>Provides a Python API.</li> <li>Mainly designed to be embedded into other programs, but can also be used directly for simple translation tasks.</li> </ul>"},{"location":"#preview","title":"Preview","text":""},{"location":"#we-are-hiring","title":"We are hiring","text":"<p>See details: EN | ZH</p>"},{"location":"#getting-started","title":"Getting Started","text":""},{"location":"#install-from-pypi","title":"Install from PyPI","text":"<p>We recommend using the Tool feature of uv to install yadt.</p> <ol> <li> <p>First, you need to refer to uv installation to install uv and set up the <code>PATH</code> environment variable as prompted.</p> </li> <li> <p>Use the following command to install yadt:</p> </li> </ol> <pre><code>uv tool install --python 3.12 BabelDOC\n\nbabeldoc --help\n</code></pre> <ol> <li>Use the <code>babeldoc</code> command. For example:</li> </ol> <pre><code>babeldoc --bing  --files example.pdf\n\n# multiple files\nbabeldoc --bing  --files example1.pdf --files example2.pdf\n</code></pre>"},{"location":"#install-from-source","title":"Install from Source","text":"<p>We still recommend using uv to manage virtual environments.</p> <ol> <li> <p>First, you need to refer to uv installation to install uv and set up the <code>PATH</code> environment variable as prompted.</p> </li> <li> <p>Use the following command to install yadt:</p> </li> </ol> <pre><code># clone the project\ngit clone https://github.com/funstory-ai/BabelDOC\n\n# enter the project directory\ncd BabelDOC\n\n# install dependencies and run babeldoc\nuv run babeldoc --help\n</code></pre> <ol> <li>Use the <code>uv run babeldoc</code> command. For example:</li> </ol> <pre><code>uv run babeldoc --files example.pdf --openai --openai-model \"gpt-4o-mini\" --openai-base-url \"https://api.openai.com/v1\" --openai-api-key \"your-api-key-here\"\n\n# multiple files\nuv run babeldoc --files example.pdf --files example2.pdf --openai --openai-model \"gpt-4o-mini\" --openai-base-url \"https://api.openai.com/v1\" --openai-api-key \"your-api-key-here\"\n</code></pre> <p>Tip</p> <p>The absolute path is recommended.</p>"},{"location":"#advanced-options","title":"Advanced Options","text":"<p>Note</p> <p>This CLI is mainly for debugging purposes. Although end users can use this CLI to translate files, we do not provide any technical support for this purpose.</p> <p>End users should directly use Online Service: Beta version launched Immersive Translate - BabelDOC 1000 free pages per month.</p> <p>End users who need self-deployment should use PDFMathTranslate</p> <p>If you find that an option is not listed below, it means that this option is a debugging option for maintainers. Please do not use these options.</p>"},{"location":"#language-options","title":"Language Options","text":"<ul> <li><code>--lang-in</code>, <code>-li</code>: Source language code (default: en)</li> <li><code>--lang-out</code>, <code>-lo</code>: Target language code (default: zh)</li> </ul> <p>Tip</p> <p>Currently, this project mainly focuses on English-to-Chinese translation, and other scenarios have not been tested yet.</p> <p>(2025.3.1 update): Basic English target language support has been added, primarily to minimize line breaks within words([0-9A-Za-z]+).</p> <p>HELP WANTED: Collecting word regular expressions for more languages</p>"},{"location":"#pdf-processing-options","title":"PDF Processing Options","text":"<ul> <li><code>--files</code>: One or more file paths to input PDF documents.</li> <li><code>--pages</code>, <code>-p</code>: Specify pages to translate (e.g., \"1,2,1-,-3,3-5\"). If not set, translate all pages</li> <li><code>--split-short-lines</code>: Force split short lines into different paragraphs (may cause poor typesetting &amp; bugs)</li> <li><code>--short-line-split-factor</code>: Split threshold factor (default: 0.8). The actual threshold is the median length of all lines on the current page * this factor</li> <li><code>--skip-clean</code>: Skip PDF cleaning step</li> <li><code>--dual-translate-first</code>: Put translated pages first in dual PDF mode (default: original pages first)</li> <li><code>--disable-rich-text-translate</code>: Disable rich text translation (may help improve compatibility with some PDFs)</li> <li><code>--enhance-compatibility</code>: Enable all compatibility enhancement options (equivalent to --skip-clean --dual-translate-first --disable-rich-text-translate)</li> <li><code>--use-alternating-pages-dual</code>: Use alternating pages mode for dual PDF. When enabled, original and translated pages are arranged in alternate order. When disabled (default), original and translated pages are shown side by side on the same page.</li> <li><code>--watermark-output-mode</code>: Control watermark output mode: 'watermarked' (default) adds watermark to translated PDF, 'no_watermark' doesn't add watermark, 'both' outputs both versions.</li> <li><code>--max-pages-per-part</code>: Maximum number of pages per part for split translation. If not set, no splitting will be performed.</li> <li><code>--no-watermark</code>: [DEPRECATED] Use --watermark-output-mode=no_watermark instead.</li> <li><code>--translate-table-text</code>: Translate table text (experimental, default: False)</li> <li><code>--skip-scanned-detection</code>: Skip scanned document detection (default: False). When using split translation, only the first part performs detection if not skipped.</li> </ul> <p>Tip</p> <ul> <li>Both <code>--skip-clean</code> and <code>--dual-translate-first</code> may help improve compatibility with some PDF readers</li> <li><code>--disable-rich-text-translate</code> can also help with compatibility by simplifying translation input</li> <li>However, using <code>--skip-clean</code> will result in larger file sizes</li> <li>If you encounter any compatibility issues, try using <code>--enhance-compatibility</code> first</li> <li>Use <code>--max-pages-per-part</code> for large documents to split them into smaller parts for translation and automatically merge them back.</li> <li>Use <code>--skip-scanned-detection</code> to speed up processing when you know your document is not a scanned PDF.</li> </ul>"},{"location":"#translation-service-options","title":"Translation Service Options","text":"<ul> <li><code>--qps</code>: QPS (Queries Per Second) limit for translation service (default: 4)</li> <li><code>--ignore-cache</code>: Ignore translation cache and force retranslation</li> <li><code>--no-dual</code>: Do not output bilingual PDF files</li> <li><code>--no-mono</code>: Do not output monolingual PDF files</li> <li><code>--min-text-length</code>: Minimum text length to translate (default: 5)</li> <li><code>--openai</code>: Use OpenAI for translation (default: False)</li> </ul> <p>Tip</p> <ol> <li>Currently, only OpenAI-compatible LLM is supported. For more translator support, please use PDFMathTranslate.</li> <li>It is recommended to use models with strong compatibility with OpenAI, such as: <code>glm-4-flash</code>, <code>deepseek-chat</code>, etc.</li> <li>Currently, it has not been optimized for traditional translation engines like Bing/Google, it is recommended to use LLMs.</li> <li>You can use litellm to access multiple models.</li> </ol>"},{"location":"#openai-specific-options","title":"OpenAI Specific Options","text":"<ul> <li><code>--openai-model</code>: OpenAI model to use (default: gpt-4o-mini)</li> <li><code>--openai-base-url</code>: Base URL for OpenAI API</li> <li><code>--openai-api-key</code>: API key for OpenAI service</li> </ul> <p>Tip</p> <ol> <li>This tool supports any OpenAI-compatible API endpoints. Just set the correct base URL and API key. (e.g. <code>https://xxx.custom.xxx/v1</code>)</li> <li>For local models like Ollama, you can use any value as the API key (e.g. <code>--openai-api-key a</code>).</li> </ol>"},{"location":"#output-control","title":"Output Control","text":"<ul> <li><code>--output</code>, <code>-o</code>: Output directory for translated files. If not set, use current working directory.</li> <li><code>--debug</code>, <code>-d</code>: Enable debug logging level and export detailed intermediate results in <code>~/.cache/yadt/working</code>.</li> <li><code>--report-interval</code>: Progress report interval in seconds (default: 0.1).</li> </ul>"},{"location":"#offline-assets-management","title":"Offline Assets Management","text":"<ul> <li><code>--generate-offline-assets</code>: Generate an offline assets package in the specified directory. This creates a zip file containing all required models and fonts.</li> <li><code>--restore-offline-assets</code>: Restore an offline assets package from the specified file. This extracts models and fonts from a previously generated package.</li> </ul> <p>Tip</p> <ol> <li>Offline assets packages are useful for environments without internet access or to speed up installation on multiple machines.</li> <li>Generate a package once with <code>babeldoc --generate-offline-assets /path/to/output/dir</code> and then distribute it.</li> <li>Restore the package on target machines with <code>babeldoc --restore-offline-assets /path/to/offline_assets_*.zip</code>.</li> <li>The offline assets package name cannot be modified because the file list hash is encoded in the name.</li> <li>If you provide a directory path to <code>--restore-offline-assets</code>, the tool will automatically look for the correct offline assets package file in that directory.</li> <li>The package contains all necessary fonts and models required for document processing, ensuring consistent results across different environments.</li> <li>The integrity of all assets is verified using SHA3-256 hashes during both packaging and restoration.</li> <li>If you're deploying in an air-gapped environment, make sure to generate the package on a machine with internet access first.</li> </ol>"},{"location":"#configuration-file","title":"Configuration File","text":"<ul> <li><code>--config</code>, <code>-c</code>: Configuration file path. Use the TOML format.</li> </ul> <p>Example Configuration:</p> <pre><code>[babeldoc]\n# Basic settings\ndebug = true\nlang-in = \"en-US\"\nlang-out = \"zh-CN\"\nqps = 10\noutput = \"/path/to/output/dir\"\n\n# PDF processing options\nsplit-short-lines = false\nshort-line-split-factor = 0.8\nskip-clean = false\ndual-translate-first = false\ndisable-rich-text-translate = false\nuse-alternating-pages-dual = false\nwatermark-output-mode = \"watermarked\"  # Choices: \"watermarked\", \"no_watermark\", \"both\"\nmax-pages-per-part = 50  # Automatically split the document for translation and merge it back.\n# no-watermark = false  # DEPRECATED: Use watermark-output-mode instead\nskip-scanned-detection = false  # Skip scanned document detection for faster processing\n\n# Translation service\nopenai = true\nopenai-model = \"gpt-4o-mini\"\nopenai-base-url = \"https://api.openai.com/v1\"\nopenai-api-key = \"your-api-key-here\"\n\n# Output control\nno-dual = false\nno-mono = false\nmin-text-length = 5\nreport-interval = 0.5\n\n# Offline assets management\n# Uncomment one of these options as needed:\n# generate-offline-assets = \"/path/to/output/dir\"\n# restore-offline-assets = \"/path/to/offline_assets_package.zip\"\n</code></pre>"},{"location":"#python-api","title":"Python API","text":"<p>Tip</p> <ol> <li> <p>Before pdf2zh 2.0 is released, you can temporarily use BabelDOC's Python API. However, after pdf2zh 2.0 is released, please directly use pdf2zh's Python API.</p> </li> <li> <p>This project's Python API does not guarantee any compatibility. However, the Python API from pdf2zh will guarantee a certain level of compatibility.</p> </li> </ol> <p>You can refer to the example in main.py to use BabelDOC's Python API.</p> <p>Please note:</p> <ol> <li> <p>Make sure call <code>babeldoc.high_level.init()</code> before using the API</p> </li> <li> <p>The current <code>TranslationConfig</code> does not fully validate input parameters, so you need to ensure the validity of input parameters</p> </li> <li> <p>For offline assets management, you can use the following functions:    <pre><code># Generate an offline assets package\nfrom pathlib import Path\nimport babeldoc.assets.assets\n\n# Generate package to a specific directory\n# path is optional, default is ~/.cache/babeldoc/assets/offline_assets_{hash}.zip\nbabeldoc.assets.assets.generate_offline_assets_package(Path(\"/path/to/output/dir\"))\n\n# Restore from a package file\n# path is optional, default is ~/.cache/babeldoc/assets/offline_assets_{hash}.zip\nbabeldoc.assets.assets.restore_offline_assets_package(Path(\"/path/to/offline_assets_package.zip\"))\n\n# You can also restore from a directory containing the offline assets package\n# The tool will automatically find the correct package file based on the hash\nbabeldoc.assets.assets.restore_offline_assets_package(Path(\"/path/to/directory\"))\n</code></pre></p> </li> </ol> <p>Tip</p> <ol> <li>The offline assets package name cannot be modified because the file list hash is encoded in the name.</li> <li>When using in production environments, it's recommended to pre-generate the assets package and include it with your application distribution.</li> <li>The package verification ensures that all required assets are intact and match their expected checksums.</li> </ol>"},{"location":"#background","title":"Background","text":"<p>There are a lot projects and teams working on to make document editing and translating easier like:</p> <ul> <li>mathpix</li> <li>Doc2X</li> <li>minerU</li> <li>PDFMathTranslate</li> </ul> <p>There are also some solutions to solve specific parts of the problem like:</p> <ul> <li>layoutreader: the read order of the text block in a pdf</li> <li>Surya: the structure of the pdf</li> </ul> <p>This project hopes to promote a standard pipeline and interface to solve the problem.</p> <p>In fact, there are two main stages of a PDF parser or translator:</p> <ul> <li>Parsing: A stage of parsing means to get the structure of the pdf such as text blocks, images, tables, etc.</li> <li>Rendering: A stage of rendering means to render the structure into a new pdf or other format.</li> </ul> <p>For a service like mathpix, it will parse the pdf into a structure may be in a XML format, and then render them using a single column reader order as layoutreader does. The bad news is that the original structure lost.</p> <p>Some people will use Adobe PDF Parser because it will generate a Word document and it keeps the original structure. But it is somewhat expensive. And you know, a pdf or word document is not a good format for reading in mobile devices.</p> <p>We offer an intermediate representation of the results from parser and can be rendered into a new pdf or other format. The pipeline is also a plugin-based system which everybody can add their new model, ocr, renderer, etc.</p>"},{"location":"#roadmap","title":"Roadmap","text":"<ul> <li> Add line support</li> <li> Add table support</li> <li> Add cross-page/cross-column paragraph support</li> <li> More advanced typesetting features</li> <li> Outline support</li> <li> ...</li> </ul> <p>Our first 1.0 version goal is to finish a translation from PDF Reference, Version 1.7 to the following language version:</p> <ul> <li>Simplified Chinese</li> <li>Traditional Chinese</li> <li>Japanese</li> <li>Spanish</li> </ul> <p>And meet the following requirements:</p> <ul> <li>layout error less than 1%</li> <li>content loss less than 1%</li> </ul>"},{"location":"#known-issues","title":"Known Issues","text":"<ol> <li>Parsing errors in the author and reference sections; they get merged into one paragraph after translation.</li> <li>Lines are not supported.</li> <li>Does not support drop caps.</li> <li>Large pages will be skipped.</li> </ol>"},{"location":"#how-to-contribute","title":"How to Contribute","text":"<p>We encourage you to contribute to YADT! Please check out the CONTRIBUTING guide.</p> <p>Everyone interacting in YADT and its sub-projects' codebases, issue trackers, chat rooms, and mailing lists is expected to follow the YADT Code of Conduct.</p> <p>Immersive Translation sponsors monthly Pro membership redemption codes for active contributors to this project, see details at: CONTRIBUTOR_REWARD.md</p>"},{"location":"#acknowledgements","title":"Acknowledgements","text":"<ul> <li>PDFMathTranslate</li> <li>DocLayout-YOLO</li> <li>pdfminer</li> <li>PyMuPDF</li> <li>Asynchronize</li> <li>PriorityThreadPoolExecutor</li> </ul>"},{"location":"#star_hist","title":"Star History","text":""},{"location":"CODE_OF_CONDUCT/","title":"Contributor Covenant Code of Conduct","text":""},{"location":"CODE_OF_CONDUCT/#our-pledge","title":"Our Pledge","text":"<p>We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p> <p>We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</p>"},{"location":"CODE_OF_CONDUCT/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to a positive environment for our community include:</p> <ul> <li>Demonstrating empathy and kindness toward other people</li> <li>Being respectful of differing opinions, viewpoints, and experiences</li> <li>Giving and gracefully accepting constructive feedback</li> <li>Accepting responsibility and apologizing to those affected by our mistakes,   and learning from the experience</li> <li>Focusing on what is best not just for us as individuals, but for the   overall community</li> </ul> <p>Examples of unacceptable behavior include:</p> <ul> <li>The use of sexualized language or imagery, and sexual attention or   advances of any kind</li> <li>Trolling, insulting or derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or email   address, without their explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"CODE_OF_CONDUCT/#enforcement-responsibilities","title":"Enforcement Responsibilities","text":"<p>Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.</p> <p>Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.</p>"},{"location":"CODE_OF_CONDUCT/#scope","title":"Scope","text":"<p>This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.</p>"},{"location":"CODE_OF_CONDUCT/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at aw@funstory.ai . All complaints will be reviewed and investigated promptly and fairly.</p> <p>All community leaders are obligated to respect the privacy and security of the reporter of any incident.</p>"},{"location":"CODE_OF_CONDUCT/#enforcement-guidelines","title":"Enforcement Guidelines","text":"<p>Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:</p>"},{"location":"CODE_OF_CONDUCT/#1-correction","title":"1. Correction","text":"<p>Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.</p> <p>Consequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.</p>"},{"location":"CODE_OF_CONDUCT/#2-warning","title":"2. Warning","text":"<p>Community Impact: A violation through a single incident or series of actions.</p> <p>Consequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.</p>"},{"location":"CODE_OF_CONDUCT/#3-temporary-ban","title":"3. Temporary Ban","text":"<p>Community Impact: A serious violation of community standards, including sustained inappropriate behavior.</p> <p>Consequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.</p>"},{"location":"CODE_OF_CONDUCT/#4-permanent-ban","title":"4. Permanent Ban","text":"<p>Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior,  harassment of an individual, or aggression toward or disparagement of classes of individuals.</p> <p>Consequence: A permanent ban from any sort of public interaction within the community.</p>"},{"location":"CODE_OF_CONDUCT/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html.</p> <p>Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder.</p> <p>For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.</p>"},{"location":"CONTRIBUTING/","title":"Contributing to BabelDOC","text":""},{"location":"CONTRIBUTING/#how-to-contribute-to-babeldoc","title":"How to contribute to BabelDOC","text":""},{"location":"CONTRIBUTING/#about-language","title":"About Language","text":"<ul> <li>Issues can be in Chinese or English</li> <li>PRs are limited to English</li> <li>All documents are provided in English only</li> </ul>"},{"location":"CONTRIBUTING/#did-you-find-a-bug","title":"Did you find a bug?","text":"<ul> <li>Ensure the bug was not already reported by searching on GitHub under Issues.</li> </ul> <p>Please pay special attention to:</p> <ol> <li>Known compatibility issues with pdf2zh - see #20 for details</li> <li> <p>Reported edge cases and limitations from downstream applications - see #23 for discussion</p> </li> <li> <p>If you're unable to find an open issue addressing the problem, open a new one. Be sure to include a title and clear description, as much relevant information as possible.</p> </li> </ol>"},{"location":"CONTRIBUTING/#if-you-wish-to-request-changes-or-new-features","title":"If you wish to request changes or new features","text":"<ul> <li>Suggest your change in the Issues section.</li> </ul>"},{"location":"CONTRIBUTING/#if-you-wish-to-add-more-translators","title":"If you wish to add more translators","text":"<ul> <li>This project is not intended for direct end-user use, and the supported translators are mainly for debugging purposes. Unless it clearly helps with development and debugging, PRs for directly adding translators will not be accepted.</li> <li>You can directly use PDFMathTranslate to get support for more translators.</li> </ul>"},{"location":"CONTRIBUTING/#if-you-wish-to-contribute-to-babeldoc","title":"If you wish to contribute to BabelDOC","text":"<p>Tip</p> <p>If you have any questions about the source code or related matters, please contact the maintainer at aw@funstory.ai .</p> <p>You can also raise questions in Issues.</p> <p>You can contact the maintainers in the pdf2zh discussion group.</p> <p>Due to the current high rate of code changes, this project only accepts small PRs. If you would like to suggest a change and you include a patch as a proof-of-concept, that would be great. However, please do not be offended if we rewrite your patch from scratch.</p> <ol> <li>Fork this repository and clone it locally.</li> <li>Use <code>doc/deploy.sh</code> to set up the development environment.</li> <li>Create a new branch and make code changes on that branch. <code>git checkout -b feature/&lt;feature-name&gt;</code></li> <li> <p>Perform development and ensure the code meets the requirements.</p> </li> <li> <p>Commit your changes to your new branch.</p> </li> </ol> <pre><code>git add .\n\ngit commit -m \"&lt;semantic commit message&gt;\"\n</code></pre> <ol> <li> <p>Push to your repository: <code>git push origin feature/&lt;feature-name&gt;</code>.</p> </li> <li> <p>Create a PR on GitHub and provide a detailed description.</p> </li> <li> <p>Ensure all automated checks pass.</p> </li> </ol>"},{"location":"CONTRIBUTING/#basic-requirements","title":"Basic Requirements","text":""},{"location":"CONTRIBUTING/#workflow","title":"Workflow","text":"<ol> <li> <p>Please create a fork on the main branch and develop on the forked branch.</p> </li> <li> <p>When submitting a Pull Request (PR), please provide detailed descriptions of the changes.</p> </li> <li> <p>If the PR fails automated checks (showing checks failed and red cross marks), please review the corresponding details and modify the submission to ensure the new PR passes automated checks.</p> </li> <li> <p>Development and Testing</p> </li> <li> <p>Use the <code>uv run BabelDOC</code> command for development and testing.</p> </li> <li> <p>When you need print log, please use <code>log.debug()</code> to print info. DO NOT USE <code>print()</code></p> </li> <li> <p>Code formatting</p> </li> <li> <p>Dependency Updates</p> </li> <li> <p>If new dependencies are introduced, please update the dependency list in pyproject.toml accordingly.</p> </li> <li> <p>It is recommended to use the <code>uv add</code> command for adding dependencies.</p> </li> <li> <p>Documentation Updates</p> </li> <li> <p>If new command-line options are added, please update the command-line options list in README.md accordingly.</p> </li> <li> <p>Commit Messages</p> </li> <li> <p>Use Conventional Commits, for example: feat(translator): add openai.</p> </li> <li> <p>Coding Style</p> </li> <li> <p>Please ensure submitted code follows basic coding style guidelines.</p> </li> <li>Use pep8-naming.</li> <li>Comments should be in English.</li> <li>Follow these specific Python coding style guidelines:</li> </ol> <p>a. Naming Conventions:</p> <ul> <li>Class names should use CapWords (PascalCase): <code>class TranslatorConfig</code></li> <li>Function and variable names should use snake_case: <code>def process_text()</code>, <code>word_count = 0</code></li> <li>Constants should be UPPER_CASE: <code>MAX_RETRY_COUNT = 3</code></li> <li>Private attributes should start with underscore: <code>_internal_state</code></li> </ul> <p>b. Code Layout:</p> <ul> <li>Use 4 spaces for indentation (no tabs)</li> <li>Maximum line length is 88 characters (compatible with black formatter)</li> <li>Add 2 blank lines before top-level classes and functions</li> <li>Add 1 blank line before class methods</li> <li>No trailing whitespace</li> </ul> <p>c. Imports:</p> <ul> <li>Imports should be on separate lines: <code>import os\\nimport sys</code></li> <li>Imports should be grouped in the following order:<ol> <li>Standard library imports</li> <li>Related third party imports</li> <li>Local application/library specific imports</li> </ol> </li> <li>Use absolute imports over relative imports</li> </ul> <p>d. String Formatting:</p> <ul> <li>Prefer f-strings for string formatting: <code>f\"Count: {count}\"</code></li> <li>Use double quotes for docstrings</li> </ul> <p>e. Type Hints:</p> <ul> <li>Use type hints for function arguments and return values</li> <li>Example: <code>def translate_text(text: str) -&gt; str:</code></li> </ul> <p>f. Documentation:</p> <ul> <li>All public functions and classes must have docstrings</li> <li>Use Google style for docstrings</li> <li> <p>Example:</p> <pre><code>def function_name(arg1: str, arg2: int) -&gt; bool:\n    \"\"\"Short description of function.\n\n    Args:\n        arg1: Description of arg1\n        arg2: Description of arg2\n\n    Returns:\n        Description of return value\n\n    Raises:\n        ValueError: Description of when this error occurs\n    \"\"\"\n</code></pre> </li> </ul> <p>The existing codebase does not comply with the above specifications in some aspects. Contributions for modifications are welcome.</p>"},{"location":"CONTRIBUTING/#how-to-modify-the-intermediate-representation","title":"How to modify the intermediate representation","text":"<p>The intermediate representation is described by il_version_1.rnc. Corresponding Python data classes are generated using xsdata. The files <code>il_version_1.rng</code>, <code>il_version_1.xsd</code>, and <code>il_version_1.py</code> are auto-generated and must not be manually modified.</p>"},{"location":"CONTRIBUTING/#format-rnc-file","title":"Format RNC file","text":"<pre><code>trang babeldoc/document_il/il_version_1.rnc babeldoc/document_il/il_version_1.rnc\n</code></pre>"},{"location":"CONTRIBUTING/#generate-rng-xsd-and-python-classes","title":"Generate RNG, XSD and Python classes","text":"<pre><code># Generate RNG from RNC\ntrang babeldoc/document_il/il_version_1.rnc babeldoc/document_il/il_version_1.rng\n\n# Generate XSD from RNC\ntrang babeldoc/document_il/il_version_1.rnc babeldoc/document_il/il_version_1.xsd\n\n# Generate Python classes from XSD\nxsdata generate babeldoc/document_il/il_version_1.xsd --package babeldoc.document_il\n</code></pre>"},{"location":"CONTRIBUTOR_REWARD/","title":"BabelDOC/PDFMathTranslate \u8d21\u732e\u8005\u5956\u52b1\u89c4\u5219","text":""},{"location":"CONTRIBUTOR_REWARD/#_1","title":"\u6708\u5ea6\u6d3b\u8dc3\u8d21\u732e\u8005\u5956\u52b1\u89c4\u5219","text":""},{"location":"CONTRIBUTOR_REWARD/#_2","title":"\u4e00\u3001\u8d44\u683c\u6807\u51c6","text":""},{"location":"CONTRIBUTOR_REWARD/#_3","title":"\u8d21\u732e\u7c7b\u578b\u8981\u6c42","text":"<ul> <li>\u9700\u63d0\u4ea4 \u81f3\u5c11 1 \u4e2a\u6709\u6548 PR\uff08Pull Request\uff09\uff0c\u6216\u8fdb\u884c PR \u5ba1\u6838\u3001\u6587\u6863\u7f16\u5199 \u7b49\u8d21\u732e\u3002</li> <li>\u6709\u6548\u8d21\u732e\u5b9a\u4e49\uff1a<ul> <li>\u975e\u7b80\u5355\u7684\u6587\u6863\u9519\u522b\u5b57\u4fee\u590d</li> <li>\u975e\u7b80\u5355\u7684\u4ee3\u7801\u683c\u5f0f\u5316\u8c03\u6574\uff08\u5982\u4ec5\u8c03\u6574\u7f29\u8fdb\u3001\u7a7a\u683c\u7b49\uff09</li> <li>\u9700\u505a\u51fa\u5b9e\u8d28\u6027\u8d21\u732e\uff08\u5982\u529f\u80fd\u5f00\u53d1\u3001Bug \u4fee\u590d\u3001\u6027\u80fd\u4f18\u5316\u3001\u67b6\u6784\u8c03\u6574\u3001\u6280\u672f\u6587\u6863\u7f16\u5199\u3001PR \u5ba1\u6838\u7b49\uff09</li> </ul> </li> <li>\u793a\u4f8b\u5408\u683c\u8d21\u732e\uff1a\u65b0\u589e\u529f\u80fd\u6a21\u5757\u3001\u4fee\u590d\u903b\u8f91\u9519\u8bef\u3001\u4f18\u5316\u7b97\u6cd5\u6548\u7387\u3001\u7f16\u5199\u6280\u672f\u6587\u6863\u7b49</li> </ul>"},{"location":"CONTRIBUTOR_REWARD/#_4","title":"\u65f6\u95f4\u8303\u56f4","text":"<ul> <li>\u6bcf\u6708 1 \u65e5\u81f3\u6708\u672b\u6700\u540e\u4e00\u5929\u5408\u5e76\u7684 PR \u8ba1\u5165\u5f53\u6708\u7edf\u8ba1</li> </ul>"},{"location":"CONTRIBUTOR_REWARD/#_5","title":"\u4e8c\u3001\u7533\u8bf7\u6d41\u7a0b","text":""},{"location":"CONTRIBUTOR_REWARD/#_6","title":"\u7533\u8bf7\u6761\u4ef6","text":"<ul> <li>PR \u9700\u88ab\u6210\u529f\u5408\u5e76\u81f3funstory-ai/BabelDOC \u4ed3\u5e93\u6216 Byaidu/PDFMathTranslate\u7684\u4e3b\u5206\u652f\u3002</li> <li>\u82e5\u76ee\u6807\u4e3a funstory-ai/BabelDOC \u7684 PR \u672a\u88ab\u5408\u5e76\uff0c\u4f46\u88ab\u7ef4\u62a4\u8005\u8ba4\u5b9a\u4e3a\u6709\u4ef7\u503c\u7684\u6982\u5ff5\u9a8c\u8bc1\uff0c\u540c\u6837\u7b26\u5408\u6761\u4ef6\u3002</li> <li>\u5ba1\u6838 PR\u3001\u64b0\u5199 wiki \u7b49\u8d21\u732e\u4e5f\u5fc5\u987b\u662f\u4ee5\u4e0a\u4e24\u4e2a\u4ed3\u5e93\u3002</li> <li>\u540c\u4e00\u8d21\u732e\u8005\u6bcf\u6708\u4ec5\u53ef\u7533\u8bf7\u4e00\u6b21\uff08\u65e0\u8bba\u63d0\u4ea4 PR \u6570\u91cf\uff09</li> <li>\u540c\u4e00\u8d21\u732e\u8005\u6bcf\u6708\u6700\u591a\u53ef\u4ee5\u83b7\u5f97 1 \u4e2a\u5151\u6362\u7801</li> <li>\u5bf9\u4e8e PR\uff0c\u53ea\u6709\u53d1\u8d77\u8005\u53ef\u4ee5\u7533\u8bf7\u5151\u6362\u7801</li> <li>\u4ec5\u53ef\u4f7f\u7528\u5f53\u6708\u7684\u8d21\u732e\u7533\u8bf7\u5151\u6362\u7801\uff08\u7279\u6b8a\u60c5\u51b5\u8bf7\u8054\u7cfb aw@funstory.ai \u8bf4\u660e\uff09</li> </ul>"},{"location":"CONTRIBUTOR_REWARD/#_7","title":"\u7533\u8bf7\u65b9\u5f0f","text":"<ul> <li>\u53d1\u9001\u90ae\u4ef6\u81f3 aw@funstory.ai</li> <li>\u90ae\u4ef6\u6807\u9898\u683c\u5f0f\uff1a<code>[\u8d21\u732e\u8005\u4f1a\u5458\u5151\u6362\u7801\u7533\u8bf7] GitHub\u7528\u6237\u540d-\u6708\u4efd</code>\uff08\u4f8b\uff1a<code>[\u8d21\u732e\u8005\u4f1a\u5458\u5151\u6362\u7801\u7533\u8bf7] awwaawwa-2024-07</code>\uff09</li> <li>\u90ae\u4ef6\u6b63\u6587\u9700\u5305\u542b\uff1a<ul> <li>GitHub \u7528\u6237\u540d</li> <li>\u5408\u5e76 PR \u7684\u5b8c\u6574\u94fe\u63a5</li> </ul> </li> <li>\u9644\u4ef6\u8981\u6c42\uff1a<ul> <li>PR \u9875\u9762\u5b8c\u6574\u622a\u56fe\uff08\u9700\u5305\u542b\u5408\u5e76\u72b6\u6001\u3001\u4ed3\u5e93\u540d\u79f0\u53ca\u70b9\u51fb\u5934\u50cf\u540e\u5f39\u51fa\u6765\u7684\u4fa7\u8fb9\u680f\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff09</li> </ul> </li> </ul>"},{"location":"CONTRIBUTOR_REWARD/#_8","title":"\u5956\u52b1\u8bf4\u660e","text":"<ul> <li>\u5956\u52b1\u5185\u5bb9\uff1a\u6c89\u6d78\u5f0f\u7ffb\u8bd1\uff08Immersive Translate\uff09\u6708\u5ea6\u4f1a\u5458\u5151\u6362\u7801</li> <li>\u5151\u6362\u7801\u4f7f\u7528\uff1a\u5728\u6c89\u6d78\u5f0f\u7ffb\u8bd1\u5b98\u7f51\u5151\u6362\u9875\u8f93\u5165\u5373\u53ef\u6fc0\u6d3b</li> <li>\u4f1a\u5458\u6743\u76ca\uff1a\u6c89\u6d78\u5f0f\u7ffb\u8bd1 Pro \u4f1a\u5458\u4e00\u4e2a\u6708\uff08\u8be6\u89c1\u5b98\u7f51\u4ef7\u683c\u9875\u8bf4\u660e\uff09</li> <li>\u5151\u6362\u7801\u4e3a\u4e13\u5c5e\u798f\u5229\uff0c\u4e0d\u53ef\u8f6c\u8ba9</li> </ul>"},{"location":"CONTRIBUTOR_REWARD/#_9","title":"\u4e09\u3001\u5ba1\u6838\u4e0e\u53d1\u653e","text":""},{"location":"CONTRIBUTOR_REWARD/#_10","title":"\u5ba1\u6838\u5468\u671f","text":"<ul> <li>\u6211\u4eec\u4f1a\u5c3d\u529b\u5728\u6536\u5230\u7533\u8bf7\u90ae\u4ef6\u540e 1 \u4e2a\u5de5\u4f5c\u65e5\u5185\u5b8c\u6210\u5ba1\u6838</li> <li>\u5ba1\u6838\u65f6\u95f4\u53ef\u80fd\u56e0\u7533\u8bf7\u6570\u91cf\u3001\u5ba1\u6838\u590d\u6742\u5ea6\u7b49\u56e0\u7d20\u6709\u6240\u5ef6\u957f</li> <li>\u5ba1\u6838\u901a\u8fc7\u540e\uff0c\u5151\u6362\u7801\u5c06\u901a\u8fc7\u90ae\u4ef6\u65b9\u5f0f\u53d1\u9001</li> <li>\u82e5\u5ba1\u6838\u672a\u901a\u8fc7\uff0c\u6211\u4eec\u4f1a\u901a\u8fc7\u90ae\u4ef6\u8bf4\u660e\u539f\u56e0</li> </ul>"},{"location":"CONTRIBUTOR_REWARD/#_11","title":"\u5151\u6362\u7801\u89c4\u5219","text":"<ul> <li>\u4f7f\u7528\u65b9\u5f0f\uff1a\u5b98\u7f51\u5151\u6362\u9875\u8f93\u5165\u5151\u6362\u7801\u6fc0\u6d3b</li> <li>\u6743\u76ca\u5185\u5bb9\uff1a\u6708\u5ea6\u4f1a\u5458\uff08\u5177\u4f53\u6743\u76ca\u89c1\u5b98\u7f51\u4ef7\u683c\u9875\u8bf4\u660e\uff09</li> <li>\u4e0d\u53ef\u8f6c\u8ba9</li> </ul>"},{"location":"CONTRIBUTOR_REWARD/#_12","title":"\u56db\u3001\u6ce8\u610f\u4e8b\u9879","text":""},{"location":"CONTRIBUTOR_REWARD/#_13","title":"\u7981\u6b62\u884c\u4e3a","text":"<ul> <li>\u5c06\u5b8c\u6574\u529f\u80fd\u62c6\u5206\u4e3a\u591a\u4e2a\u65e0\u5173 PR \u63d0\u4ea4</li> <li>\u63d0\u4ea4\u8d28\u91cf\u4e0d\u5408\u683c\u6216\u5177\u6709\u6f5c\u5728\u5371\u5bb3\u7684\u4ee3\u7801</li> <li>\u63d0\u4f9b\u865a\u5047\u6216\u8bef\u5bfc\u6027\u7684\u7533\u8bf7\u6750\u6599</li> </ul>"},{"location":"CONTRIBUTOR_REWARD/#_14","title":"\u7279\u522b\u8bf4\u660e","text":"<ul> <li>funstory.ai \u4fdd\u7559\u5bf9\u8d21\u732e\u4ef7\u503c\u7684\u8bc4\u4f30\u6743\u3001\u89c4\u5219\u7684\u6700\u7ec8\u89e3\u91ca\u6743\u7b49\u6240\u6709\u5fc5\u8981\u6743\u5229</li> <li>\u89c4\u5219\u5982\u6709\u5b9e\u8d28\u6027\u66f4\u65b0\uff08\u683c\u5f0f\u8c03\u6574\u7b49\u9664\u5916\uff09\uff0c\u5c06\u63d0\u524d 1 \u5929\u5728 BabelDOC GitHub PR \u516c\u544a</li> <li>\u8fc7\u671f\u672a\u4f7f\u7528\u7684\u5151\u6362\u7801\u4e0d\u4e88\u8865\u53d1</li> <li>\u81ea 2025 \u5e74 2 \u6708 1 \u65e5\u8d77\u7684\u8d21\u732e\u53ef\u4ee5\u7533\u8bf7\u5151\u6362\u7801</li> <li>\u4e3a\u4e86\u786e\u8ba4\u60a8\u662f Pull Request (PR) \u7684\u53d1\u8d77\u8005\uff0c\u9632\u6b62\u4ed6\u4eba\u5192\u9886\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u8981\u6c42\u60a8\u4f7f\u7528\u53d1\u8d77\u8005\u8d26\u53f7\u5728 PR \u4e0b\u65b9\u7559\u8a00\u6307\u5b9a\u7684\u968f\u673a\u6570\u5b57\u3002</li> </ul>"},{"location":"CONTRIBUTOR_REWARD/#faq","title":"\u5e38\u89c1\u95ee\u9898\u89e3\u7b54\uff08FAQ\uff09","text":"<p>Q\uff1a\u5982\u4f55\u5224\u65ad\u6587\u6863\u7ffb\u8bd1\u8d21\u732e\u662f\u5426\u6709\u6548\uff1f</p> <p>A\uff1a\u7cfb\u7edf\u6027\u7684\u4eba\u5de5\u7ffb\u8bd1\uff08\u5982\u5b8c\u6574\u7ae0\u8282\u7684\u7ffb\u8bd1\u5e76\u7ecf\u8fc7\u4eba\u5de5\u6821\u5bf9\uff09\u89c6\u4e3a\u6709\u6548\u8d21\u732e\u3002\u96f6\u6563\u6bb5\u843d\u7ffb\u8bd1\u6216\u4ec5\u4f9d\u8d56\u673a\u5668\u7ffb\u8bd1\u7684\u5185\u5bb9\u4e0d\u8ba1\u5165\u6709\u6548\u8d21\u732e\u3002</p> <p>Q\uff1a\u5151\u6362\u7801\u8fc7\u671f\u4e86\u53ef\u4ee5\u8865\u53d1\u5417\uff1f</p> <p>A\uff1a\u4e3a\u786e\u4fdd\u516c\u5e73\u6027\uff0c\u8fc7\u671f\u7684\u5151\u6362\u7801\u5c06\u4e0d\u4e88\u8865\u53d1\uff0c\u8bf7\u5728\u6709\u6548\u671f\u5185\u53ca\u65f6\u4f7f\u7528\u3002</p> <p>Q\uff1a\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u6587\u6863\u662f\u4e2d\u6587\u7684\uff1f</p> <p>A\uff1a\u56e0\u4e3a\u76ee\u524d\u5e94\u8be5\u662f\u4e2d\u6587\u8d21\u732e\u8005\u591a\u5427\uff0c\u6240\u4ee5\u5c31\u5148\u5199\u4e2d\u6587\u7684\u3002\u540e\u9762\u518d\u64b0\u5199\u82f1\u6587\u7248\u7684\u3002</p> <p>\u89c4\u5219\u516c\u793a\uff1a\u672c\u89c4\u5219\u6587\u6863\u5b58\u653e\u4e8e BabelDOC \u4ed3\u5e93 CONTRIBUTOR_REWARD.md\uff0c\u5e76\u5728 Contributor Reward - BabelDOC \u5c55\u793a\u3002</p>"},{"location":"intro-to-pdf-object/","title":"An Introduction to PDF Object Definitions in dpml","text":""},{"location":"intro-to-pdf-object/#1-understanding-pdf-structure","title":"1. Understanding PDF Structure","text":"<p>A PDF file is fundamentally an indexed collection of objects, where each object represents a structured data unit. The file structure consists of four main components:</p> <ol> <li>A header</li> <li>Object definitions</li> <li>A cross-reference table</li> <li>A trailer</li> </ol> <p>The cross-reference table serves as a lookup directory, mapping each numbered object to its byte offset location within the file. The trailer contains critical metadata, including the location of the root object (document catalog), which serves as the entry point for PDF interpretation. The file concludes with a byte offset pointing to the cross-reference table.</p> <p>Here's an illustrative example of a PDF file structure:</p> <pre><code>%PDF-2.0\n1 0 obj\n&lt;&lt;\n  /Pages 2 0 R\n  /Type /Catalog\n&gt;&gt;\nendobj\n2 0 obj\n&lt;&lt;\n  /Count 1\n  /Kids [\n    3 0 R\n  ]\n  /Type /Pages\n&gt;&gt;\nendobj\n3 0 obj\n&lt;&lt;\n  /Contents 4 0 R\n  /MediaBox [ 0 0 612 792 ]\n  /Parent 2 0 R\n  /Resources &lt;&lt;\n    /Font &lt;&lt; /F1 5 0 R &gt;&gt;\n  &gt;&gt;\n  /Type /Page\n&gt;&gt;\nendobj\n4 0 obj\n&lt;&lt;\n  /Length 44\n&gt;&gt;\nstream\nBT\n  /F1 24 Tf\n  72 720 Td\n  (Potato) Tj\nET\nendstream\nendobj\n5 0 obj\n&lt;&lt;\n  /BaseFont /Helvetica\n  /Encoding /WinAnsiEncoding\n  /Subtype /Type1\n  /Type /Font\n&gt;&gt;\nendobj\n\nxref\n0 6\n0000000000 65535 f \n0000000009 00000 n \n0000000062 00000 n \n0000000133 00000 n \n0000000277 00000 n \n0000000372 00000 n \ntrailer &lt;&lt;\n  /Root 1 0 R\n  /Size 6\n  /ID [&lt;42841c13bbf709d79a200fa1691836f8&gt;&lt;b1d8b5838eeafe16125317aa78e666aa&gt;]\n&gt;&gt;\nstartxref\n478\n%%EOF\n</code></pre>"},{"location":"intro-to-pdf-object/#pdf-file-interpretation","title":"PDF File Interpretation","text":"<p>When a PDF viewer processes a file, it follows these steps:</p> <ol> <li>Starts at the file's end to locate the cross-reference table offset</li> <li>Accesses the cross-reference table to find object locations</li> <li>Reads the trailer dictionary to identify the document catalog</li> <li>Uses the document catalog to access various document components:</li> <li>Pages</li> <li>Outlines</li> <li>Thumbnails</li> <li>Annotations</li> <li>Other PDF elements</li> </ol> <p>The pages tree root is particularly crucial as it enables navigation to specific pages within the document.</p>"},{"location":"intro-to-pdf-object/#example-interpretation-flow","title":"Example Interpretation Flow","text":"<p>Let's trace through our example:</p> <ol> <li>The cross-reference table begins at byte offset 478 (indicated after <code>startxref</code>)</li> <li>The trailer identifies object 1 as the document catalog (<code>/Root 1 0 R</code>)</li> <li>Object 1 is located at byte offset 9</li> <li>The document catalog points to object 2 as the pages tree root</li> <li>Object 2 is found at byte offset 62</li> <li>The pages tree identifies page 3 as the first page</li> <li>Object 3 is positioned at byte offset 133</li> <li>Object 3 defines the page properties and links to object 4 for content</li> <li>Object 4, at byte offset 277, contains the drawing instructions for rendering \"Potato\"</li> </ol> <p>This structure enables efficient random access to any part of the PDF document.</p>"},{"location":"intro-to-pdf-object/#2-pdf-objects","title":"2. PDF Objects","text":"<p>Earlier, we discussed PDF objects and introduced the concept of dictionaries. At the top level of a PDF file, objects are identified by two numbers followed by the keyword \"obj\". The first number serves as the object number, while the second\u2014known as the generation number\u2014is typically 0. Everything between these identifiers and the \"endobj\" keyword constitutes the object's body.</p> <p>The PDF specification provides a mechanism for modifying files by appending object updates and cross-reference table entries. When an object's contents are completely replaced (rather than modified), its generation number can be incremented. This allows object numbers to be reused while preventing old indirect references from resolving to new objects. However, such files are rare in practice, and generation numbers can generally be disregarded. Modern PDF specifications using object streams have even eliminated generation numbers entirely.</p> <p>PDF objects share similarities with data structures found in JSON, YAML, and modern programming languages, though PDF includes some unique object types. Here are the available PDF object types:</p> <ul> <li> <p>String: A text sequence enclosed in parentheses, e.g., (potato). Note that PDF strings typically don't support full Unicode encoding, though there are specific cases where this is possible. (A detailed discussion of character encoding is beyond our current scope.)</p> </li> <li> <p>Number: Both integers and floating-point numbers (e.g., 12, 3.14159). While the PDF specification distinguishes between integers and real numbers, they're often interchangeable in practice\u2014integers can be used where real numbers are expected, and viewers typically handle real numbers appropriately when integers are required.</p> </li> <li> <p>Boolean: Simple true/false values</p> </li> <li> <p>Null: Represented by the keyword \"null\"</p> </li> <li> <p>Name: A keyword or dictionary key identifier starting with a forward slash (/), e.g., /Type</p> </li> <li> <p>Array: An ordered collection of objects enclosed in square brackets, with no separators between items. Arrays support nested structures, including other arrays and dictionaries. Example: <code>[1 (two) 3.14 false]</code></p> </li> <li> <p>Dictionary: A collection of key-value pairs where keys are Names and values can be any object type. Dictionaries are enclosed in &lt;&lt; and &gt;&gt; with no separators between entries. Example: <code>&lt;&lt; /A 1 /B [2, 3 &lt;&lt;/Four 4&gt;&gt; ] &gt;&gt;</code></p> </li> <li> <p>Indirect object reference: A reference to a numbered object in the file, consisting of two numbers (object and generation) followed by 'R', e.g., 1 0 R. While some objects must be direct per the PDF specification, most can be defined at the top level and referenced indirectly.</p> </li> <li> <p>Stream: A container for binary data, structured as a dictionary (containing at least a /Length key and other format-specific entries) followed by the specified number of bytes between \"stream\" and \"endstream\" keywords. \ud83d\udd0d The stream length can be specified as an indirect object, enabling single-pass PDF generation where the stream length isn't known in advance\u2014a common practice in PDF creation.</p> </li> </ul>"},{"location":"intro-to-pdf-object/#3-pdf-object-definitions-in-dpml","title":"3. PDF Object Definitions In dpml","text":""},{"location":"intro-to-pdf-object/#coordinate-system-definition","title":"Coordinate system definition","text":"<p>The positive x-axis extends horizontally to the right, while the positive y-axis extends vertically upward, following standard mathematical conventions. The unit length along both the x and y axes is defined as 1/72 inch (or 1 point).</p>"},{"location":"intro-to-pdf-object/#4-useful-information","title":"4. Useful Information","text":"<ul> <li>PDF32000_2008 page 111: Table 51 - Operator Categories</li> </ul>"},{"location":"ImplementationDetails/","title":"Implementation Details","text":"<p>Note</p> <p>This documentation may contain AI-generated content. While we strive for accuracy, there might be inaccuracies. Please report any issues via:</p> <ul> <li>GitHub Issues</li> <li>Community contribution (PRs welcome!)</li> </ul>"},{"location":"ImplementationDetails/#core-processing-flow","title":"Core Processing Flow","text":"<p>Main processing stages in order of actual execution and corresponding documentation:</p> <ol> <li> <p>PDFParser.md: PDF Parsing and Intermediate Layer Creation</p> </li> <li> <p>LayoutParser: Layout OCR</p> </li> <li> <p>ParagraphFinding.md: Paragraph Recognition</p> </li> <li> <p>StylesAndFormulas.md: Style and Formula Processing</p> </li> <li> <p>ILTranslator.md: Intermediate Layer Translation</p> </li> <li> <p>Typesetting.md: Typesetting Processing</p> </li> <li> <p>FontMapper: Font Mapping</p> </li> <li> <p>PDFCreation.md: PDF Generation</p> </li> </ol>"},{"location":"ImplementationDetails/#api","title":"API","text":"<ol> <li>Async Translation API: Async Translation API</li> </ol> <p>Tip</p> <p>Click on document links to view detailed implementation principles and configuration options</p>"},{"location":"ImplementationDetails/AsyncTranslate/AsyncTranslate/","title":"Async Translation API","text":"<p>Note</p> <p>This documentation may contain AI-generated content. While we strive for accuracy, there might be inaccuracies. Please report any issues via:</p> <ul> <li>GitHub Issues</li> <li>Community contribution (PRs welcome!)</li> </ul>"},{"location":"ImplementationDetails/AsyncTranslate/AsyncTranslate/#overview","title":"Overview","text":"<p>The <code>yadt.high_level.async_translate</code> function provides an asynchronous interface for translating PDF files with real-time progress reporting. This function yields progress events that can be used to update progress bars or other UI elements.</p>"},{"location":"ImplementationDetails/AsyncTranslate/AsyncTranslate/#usage","title":"Usage","text":"<pre><code>async def translate_with_progress():\n    config = TranslationConfig(\n        input_file=\"example.pdf\",\n        translator=your_translator,\n        # ... other configuration options\n    )\n\n    try:\n        async for event in async_translate(config):\n            if event[\"type\"] == \"progress_update\":\n                print(f\"Progress: {event['overall_progress']}%\")\n            elif event[\"type\"] == \"finish\":\n                result = event[\"translate_result\"]\n                print(f\"Translation completed: {result.original_pdf_path}\")\n            elif event[\"type\"] == \"error\":\n                print(f\"Error occurred: {event['error']}\")\n                break\n    except asyncio.CancelledError:\n        print(\"Translation was cancelled\")\n    except KeyboardInterrupt:\n        print(\"Translation was interrupted\")\n</code></pre>"},{"location":"ImplementationDetails/AsyncTranslate/AsyncTranslate/#event-types","title":"Event Types","text":"<p>The function yields different types of events during the translation process:</p>"},{"location":"ImplementationDetails/AsyncTranslate/AsyncTranslate/#1-progress-start-event","title":"1. Progress Start Event","text":"<p>Emitted when a translation stage begins:</p> <pre><code>{\n    \"type\": \"progress_start\",\n    \"stage\": str,              # Name of the current stage\n    \"stage_progress\": float,   # Always 0.0\n    \"stage_current\": int,      # Current progress count (0)\n    \"stage_total\": int         # Total items to process in this stage\n}\n</code></pre>"},{"location":"ImplementationDetails/AsyncTranslate/AsyncTranslate/#2-progress-update-event","title":"2. Progress Update Event","text":"<p>Emitted periodically during translation (controlled by report_interval, default 0.1s):</p> <pre><code>{\n    \"type\": \"progress_update\",\n    \"stage\": str,              # Name of the current stage\n    \"stage_progress\": float,   # Progress percentage of current stage (0-100)\n    \"stage_current\": int,      # Current items processed in this stage\n    \"stage_total\": int,        # Total items to process in this stage\n    \"overall_progress\": float  # Overall translation progress (0-100)\n}\n</code></pre>"},{"location":"ImplementationDetails/AsyncTranslate/AsyncTranslate/#3-progress-end-event","title":"3. Progress End Event","text":"<p>Emitted when a stage completes:</p> <pre><code>{\n    \"type\": \"progress_end\",\n    \"stage\": str,              # Name of the completed stage\n    \"stage_progress\": float,   # Always 100.0\n    \"stage_current\": int,      # Equal to stage_total\n    \"stage_total\": int,        # Total items processed in this stage\n    \"overall_progress\": float  # Overall translation progress (0-100)\n}\n</code></pre>"},{"location":"ImplementationDetails/AsyncTranslate/AsyncTranslate/#4-finish-event","title":"4. Finish Event","text":"<p>Emitted when translation completes successfully:</p> <pre><code>{\n    \"type\": \"finish\",\n    \"translate_result\": TranslateResult  # Contains paths to translated files and timing info\n}\n</code></pre>"},{"location":"ImplementationDetails/AsyncTranslate/AsyncTranslate/#5-error-event","title":"5. Error Event","text":"<p>Emitted if an error occurs during translation:</p> <pre><code>{\n    \"type\": \"error\",\n    \"error\": str  # Error message\n}\n</code></pre>"},{"location":"ImplementationDetails/AsyncTranslate/AsyncTranslate/#translation-stages","title":"Translation Stages","text":"<p>The translation process goes through the following stages in order:</p> <ol> <li>ILCreater</li> <li>LayoutParser</li> <li>ParagraphFinder</li> <li>StylesAndFormulas</li> <li>ILTranslator</li> <li>Typesetting</li> <li>FontMapper</li> <li>PDFCreater</li> </ol> <p>Each stage will emit its own set of progress events.</p>"},{"location":"ImplementationDetails/AsyncTranslate/AsyncTranslate/#cancellation","title":"Cancellation","text":"<p>The translation process can be cancelled in several ways:</p> <ol> <li>By raising a <code>CancelledError</code> (e.g., when using <code>asyncio.Task.cancel()</code>)</li> <li>Through <code>KeyboardInterrupt</code> (e.g., when user presses Ctrl+C)</li> <li>By calling <code>translation_config.cancel_translation()</code> method</li> </ol> <p>Example of programmatic cancellation:</p> <pre><code>async def translate_with_cancellation():\n    config = TranslationConfig(\n        input_file=\"example.pdf\",\n        translator=your_translator,\n        # ... other configuration options\n    )\n\n    try:\n        # Start translation in another task\n        translation_task = asyncio.create_task(process_translation(config))\n\n        # Simulate some condition that requires cancellation\n        await asyncio.sleep(5)\n        config.cancel_translation()  # This will trigger cancellation\n\n        await translation_task  # Wait for the task to finish\n    except asyncio.CancelledError:\n        print(\"Translation was cancelled\")\n\nasync def process_translation(config):\n    async for event in async_translate(config):\n        if event[\"type\"] == \"error\":\n            if isinstance(event[\"error\"], asyncio.CancelledError):\n                print(\"Translation was cancelled\")\n                break\n            print(f\"Error occurred: {event['error']}\")\n            break\n        # ... handle other events ...\n</code></pre> <p>When cancelled: - The function will log the cancellation reason - All resources will be cleaned up properly - Any ongoing translation tasks will be stopped - A final error event with <code>CancelledError</code> will be emitted - The function will exit gracefully</p>"},{"location":"ImplementationDetails/AsyncTranslate/AsyncTranslate/#error-handling","title":"Error Handling","text":"<p>Any errors during translation will be: 1. Logged with full traceback (if debug mode is enabled) 2. Reported through an error event 3. Cause the event stream to stop after the error event 4. Clean up resources properly before exiting</p> <p>It's recommended to handle these events appropriately in your application to provide feedback to users. The example in the Usage section shows a basic error handling pattern. </p>"},{"location":"ImplementationDetails/ILTranslator/ILTranslator/","title":"Intermediate Layer Translator","text":"<p>Note</p> <p>This documentation may contain AI-generated content. While we strive for accuracy, there might be inaccuracies. Please report any issues via:</p> <ul> <li>GitHub Issues</li> <li>Community contribution (PRs welcome!)</li> </ul>"},{"location":"ImplementationDetails/ILTranslator/ILTranslator/#background","title":"Background","text":"<p>After formula and style processing, we need to translate the document while preserving all formatting, formulas, and styles. The intermediate layer translator handles this complex task by using placeholders and style preservation techniques.</p>"},{"location":"ImplementationDetails/ILTranslator/ILTranslator/#goal","title":"Goal","text":"<ol> <li>Translate text while preserving document structure</li> <li>Maintain formulas and special formatting</li> <li>Handle rich text with different styles</li> <li>Support concurrent translation for better performance</li> </ol>"},{"location":"ImplementationDetails/ILTranslator/ILTranslator/#specific-implementation","title":"Specific Implementation","text":"<p>The translation process consists of several key steps:</p>"},{"location":"ImplementationDetails/ILTranslator/ILTranslator/#step-1-translation-preparation","title":"Step 1: Translation Preparation","text":"<ol> <li>Process paragraphs:</li> <li>Skip vertical text</li> <li>Handle single-component paragraphs directly</li> <li> <p>Process multi-component paragraphs with placeholders</p> </li> <li> <p>Create placeholders:</p> </li> <li>Formula placeholders for mathematical expressions</li> <li>Rich text placeholders for styled text</li> <li>Ensure placeholder uniqueness within each paragraph</li> </ol>"},{"location":"ImplementationDetails/ILTranslator/ILTranslator/#step-2-translation-input-creation","title":"Step 2: Translation Input Creation","text":"<ol> <li>Analyze paragraph components:</li> <li>Regular text components</li> <li>Formula components</li> <li> <p>Styled text components</p> </li> <li> <p>Handle special cases:</p> </li> <li>Skip pure formula paragraphs</li> <li>Preserve original text when style matches base style</li> <li>Handle font mapping cases</li> </ol>"},{"location":"ImplementationDetails/ILTranslator/ILTranslator/#step-3-translation-execution","title":"Step 3: Translation Execution","text":"<ol> <li>Concurrent translation:</li> <li>Use thread pool for parallel processing</li> <li>Control QPS (Queries Per Second)</li> <li> <p>Track translation progress</p> </li> <li> <p>Translation tracking:</p> </li> <li>Record original text</li> <li>Record translated text</li> <li>Save tracking information for debugging</li> </ol>"},{"location":"ImplementationDetails/ILTranslator/ILTranslator/#step-4-translation-output-processing","title":"Step 4: Translation Output Processing","text":"<ol> <li>Parse translated text:</li> <li>Extract text between placeholders</li> <li>Restore formulas at placeholder positions</li> <li> <p>Restore rich text with original styles</p> </li> <li> <p>Create new paragraph components:</p> </li> <li>Maintain style information</li> <li>Preserve formula positioning</li> <li>Handle empty text segments</li> </ol>"},{"location":"ImplementationDetails/ILTranslator/ILTranslator/#additional-features","title":"Additional Features","text":"<ol> <li>Style preservation:</li> <li>Maintains original text styles</li> <li>Handles font size variations</li> <li> <p>Preserves formatting attributes</p> </li> <li> <p>Formula handling:</p> </li> <li>Preserves formula integrity</li> <li>Maintains formula positioning</li> <li> <p>Supports complex mathematical expressions</p> </li> <li> <p>Debug support:</p> </li> <li>Translation tracking</li> <li>JSON output for debugging</li> <li>Detailed logging</li> </ol>"},{"location":"ImplementationDetails/ILTranslator/ILTranslator/#limitations","title":"Limitations","text":"<ol> <li> <p>Vertical text is not supported</p> </li> <li> <p>Complex nested styles might not be perfectly preserved</p> </li> <li> <p>Placeholder conflicts could occur in rare cases</p> </li> <li> <p>Translation quality depends on external translation engine</p> </li> </ol>"},{"location":"ImplementationDetails/ILTranslator/ILTranslator/#configuration-options","title":"Configuration Options","text":"<p>The translation process can be customized through <code>TranslationConfig</code>:</p> <ol> <li><code>qps</code>: Maximum queries per second for translation</li> <li><code>debug</code>: Enable/disable debug mode and tracking</li> <li>Translation engine specific settings </li> </ol>"},{"location":"ImplementationDetails/PDFCreation/PDFCreation/","title":"PDF Creation","text":"<p>Note</p> <p>This documentation may contain AI-generated content. While we strive for accuracy, there might be inaccuracies. Please report any issues via:</p> <ul> <li>GitHub Issues</li> <li>Community contribution (PRs welcome!)</li> </ul>"},{"location":"ImplementationDetails/PDFCreation/PDFCreation/#background","title":"Background","text":"<p>After translation and typesetting, we need to create the final PDF document that preserves all the formatting, styles, and layout of the original document while containing the translated text. The PDF creation process handles this final step.</p>"},{"location":"ImplementationDetails/PDFCreation/PDFCreation/#goal","title":"Goal","text":"<ol> <li>Create a new PDF document with translated content</li> <li>Preserve all original formatting and styles</li> <li>Support both monolingual and dual-language output</li> <li>Maintain font consistency and character encoding</li> <li>Optimize the output file size and performance</li> </ol>"},{"location":"ImplementationDetails/PDFCreation/PDFCreation/#specific-implementation","title":"Specific Implementation","text":"<p>The PDF creation process consists of several key steps:</p>"},{"location":"ImplementationDetails/PDFCreation/PDFCreation/#step-1-font-management","title":"Step 1: Font Management","text":"<ol> <li>Font initialization:</li> <li>Add required fonts to the document</li> <li>Map font identifiers</li> <li> <p>Handle font encoding lengths</p> </li> <li> <p>Font availability checking:</p> </li> <li>Check available fonts for each page</li> <li>Handle XObject font requirements</li> <li> <p>Manage font resources</p> </li> <li> <p>Font subsetting:</p> </li> <li>Optimize font usage</li> <li>Reduce file size</li> <li>Maintain character support</li> </ol>"},{"location":"ImplementationDetails/PDFCreation/PDFCreation/#step-2-content-rendering","title":"Step 2: Content Rendering","text":"<ol> <li>Character processing:</li> <li>Handle individual characters</li> <li>Process character encodings</li> <li> <p>Manage character positioning</p> </li> <li> <p>Graphics state handling:</p> </li> <li>Process color spaces</li> <li>Handle transparency</li> <li> <p>Manage graphic state instructions</p> </li> <li> <p>XObject management:</p> </li> <li>Process form XObjects</li> <li>Handle drawing operations</li> <li>Maintain XObject hierarchy</li> </ol>"},{"location":"ImplementationDetails/PDFCreation/PDFCreation/#step-3-document-assembly","title":"Step 3: Document Assembly","text":"<ol> <li>Page construction:</li> <li>Build page content</li> <li>Process page resources</li> <li> <p>Handle page boundaries</p> </li> <li> <p>Content stream creation:</p> </li> <li>Generate drawing operations</li> <li>Handle text positioning</li> <li> <p>Manage content streams</p> </li> <li> <p>Resource management:</p> </li> <li>Handle font resources</li> <li>Manage XObject resources</li> <li>Process graphic states</li> </ol>"},{"location":"ImplementationDetails/PDFCreation/PDFCreation/#step-4-output-generation","title":"Step 4: Output Generation","text":"<ol> <li>Monolingual output:</li> <li>Create translated-only PDF</li> <li>Optimize file size</li> <li> <p>Apply compression</p> </li> <li> <p>Dual-language output:</p> </li> <li>Combine original and translated pages</li> <li>Handle page ordering</li> <li> <p>Maintain document structure</p> </li> <li> <p>File optimization:</p> </li> <li>Apply garbage collection</li> <li>Enable compression</li> <li>Optimize for linear reading</li> </ol>"},{"location":"ImplementationDetails/PDFCreation/PDFCreation/#additional-features","title":"Additional Features","text":"<ol> <li>Font handling:</li> <li>Support for CID fonts</li> <li>Font subsetting</li> <li> <p>Font resource management</p> </li> <li> <p>Document optimization:</p> </li> <li>File size reduction</li> <li>Performance optimization</li> <li> <p>Resource cleanup</p> </li> <li> <p>Debug support:</p> </li> <li>Decompressed output</li> <li>Debug information</li> <li>Progress tracking</li> </ol>"},{"location":"ImplementationDetails/PDFCreation/PDFCreation/#limitations","title":"Limitations","text":"<ol> <li>Font support:</li> <li>Limited to available font formats</li> <li>Font subsetting restrictions</li> <li> <p>Character encoding constraints</p> </li> <li> <p>File size:</p> </li> <li>Dual-language output increases size</li> <li>Font embedding impact</li> <li> <p>Resource duplication</p> </li> <li> <p>Performance considerations:</p> </li> <li>Processing time for large documents</li> <li>Memory usage during creation</li> <li>Optimization overhead</li> </ol>"},{"location":"ImplementationDetails/PDFCreation/PDFCreation/#configuration-options","title":"Configuration Options","text":"<p>The PDF creation process can be customized through <code>TranslationConfig</code>:</p> <ol> <li>Output options:</li> <li><code>no_mono</code>: Disable monolingual output</li> <li><code>no_dual</code>: Disable dual-language output</li> <li> <p>Output file naming patterns</p> </li> <li> <p>Optimization settings:</p> </li> <li>Compression options</li> <li>Garbage collection</li> <li> <p>Font subsetting</p> </li> <li> <p>Debug options:</p> </li> <li>Debug mode</li> <li>Decompressed output</li> <li>Progress tracking </li> </ol>"},{"location":"ImplementationDetails/PDFParsing/PDFParsing/","title":"PDF Parsing and Intermediate Layer Creation","text":"<p>Note</p> <p>This documentation may contain AI-generated content. While we strive for accuracy, there might be inaccuracies. Please report any issues via:</p> <ul> <li>GitHub Issues</li> <li>Community contribution (PRs welcome!)</li> </ul>"},{"location":"ImplementationDetails/PDFParsing/PDFParsing/#background","title":"Background","text":"<p>The first step in the translation process is to parse the PDF document and create an intermediate layer (IL) representation. This step involves extracting text, styles, formulas, and layout information from the PDF while maintaining their relationships and properties.</p>"},{"location":"ImplementationDetails/PDFParsing/PDFParsing/#goal","title":"Goal","text":"<ol> <li>Extract text content while preserving character-level information</li> <li>Maintain font and style information</li> <li>Preserve document structure and layout</li> <li>Handle special elements like XObjects and graphics</li> <li>Create a structured intermediate representation for later processing</li> </ol>"},{"location":"ImplementationDetails/PDFParsing/PDFParsing/#specific-implementation","title":"Specific Implementation","text":"<p>The parsing process consists of several key components working together:</p>"},{"location":"ImplementationDetails/PDFParsing/PDFParsing/#step-1-pdf-interpreter-pdfpageinterpreterex","title":"Step 1: PDF Interpreter (PDFPageInterpreterEx)","text":"<ol> <li>Page content processing:</li> <li>Parse PDF operators and their parameters</li> <li>Handle graphics state operations</li> <li>Process text and font operations</li> <li> <p>Manage XObject rendering</p> </li> <li> <p>Graphics filtering:</p> </li> <li>Filter non-formula lines</li> <li>Handle color space operations</li> <li> <p>Process stroke and fill operations</p> </li> <li> <p>XObject handling:</p> </li> <li>Process form XObjects</li> <li>Handle image XObjects</li> <li>Maintain XObject hierarchy</li> </ol>"},{"location":"ImplementationDetails/PDFParsing/PDFParsing/#step-2-pdf-converter-pdfconverterex","title":"Step 2: PDF Converter (PDFConverterEx)","text":"<ol> <li>Character processing:</li> <li>Extract character information</li> <li>Maintain character positions</li> <li> <p>Preserve style attributes</p> </li> <li> <p>Layout management:</p> </li> <li>Handle page boundaries</li> <li>Process figure elements</li> <li> <p>Manage coordinate systems</p> </li> <li> <p>Font handling:</p> </li> <li>Map font identifiers</li> <li>Process font metadata</li> <li>Handle CID fonts</li> </ol>"},{"location":"ImplementationDetails/PDFParsing/PDFParsing/#step-3-intermediate-layer-creator-ilcreater","title":"Step 3: Intermediate Layer Creator (ILCreater)","text":"<ol> <li>Document structure creation:</li> <li>Build page hierarchy</li> <li>Create character objects</li> <li> <p>Maintain font registry</p> </li> <li> <p>Resource management:</p> </li> <li>Process font resources</li> <li>Handle color spaces</li> <li> <p>Manage graphic states</p> </li> <li> <p>XObject tracking:</p> </li> <li>Track XObject hierarchy</li> <li>Maintain XObject states</li> <li>Process form content</li> </ol>"},{"location":"ImplementationDetails/PDFParsing/PDFParsing/#step-4-high-level-coordination","title":"Step 4: High-level Coordination","text":"<ol> <li>Process management:</li> <li>Initialize resources</li> <li>Coordinate component interactions</li> <li> <p>Handle progress tracking</p> </li> <li> <p>Resource initialization:</p> </li> <li>Set up font management</li> <li>Initialize graphics resources</li> <li> <p>Prepare document structure</p> </li> <li> <p>Error handling:</p> </li> <li>Handle malformed content</li> <li>Manage resource errors</li> <li>Provide debug information</li> </ol>"},{"location":"ImplementationDetails/PDFParsing/PDFParsing/#additional-features","title":"Additional Features","text":"<ol> <li>Font management:</li> <li>Support for CID fonts</li> <li>Font metadata extraction</li> <li> <p>Font mapping capabilities</p> </li> <li> <p>Graphics state tracking:</p> </li> <li>Color space management</li> <li>Line style preservation</li> <li> <p>Transparency handling</p> </li> <li> <p>Coordinate system handling:</p> </li> <li>Support for transformations</li> <li>Boundary box calculations</li> <li> <p>Position normalization</p> </li> <li> <p>Debug support:</p> </li> <li>Detailed logging</li> <li>Intermediate file generation</li> <li>Progress tracking</li> </ol>"},{"location":"ImplementationDetails/PDFParsing/PDFParsing/#limitations","title":"Limitations","text":"<ol> <li>Complex PDF features:</li> <li>Limited support for some PDF extensions</li> <li>Simplified graphics model</li> <li> <p>Basic transparency support</p> </li> <li> <p>Font handling:</p> </li> <li>Limited support for some font formats</li> <li>Simplified font metrics</li> <li> <p>Basic font feature support</p> </li> <li> <p>Performance considerations:</p> </li> <li>Memory usage for large documents</li> <li>Processing time for complex layouts</li> <li>Resource management overhead</li> </ol>"},{"location":"ImplementationDetails/PDFParsing/PDFParsing/#configuration-options","title":"Configuration Options","text":"<p>The parsing process can be customized through <code>TranslationConfig</code>:</p> <ol> <li><code>debug</code>: Enable/disable debug mode and intermediate file generation</li> <li>Font-related settings:</li> <li>Font mapping configurations</li> <li>CID font handling options</li> <li>Layout processing options:</li> <li>Page selection</li> <li>Content filtering rules </li> </ol>"},{"location":"ImplementationDetails/ParagraphFinding/ParagraphFinding/","title":"Paragraph Finding","text":"<p>Note</p> <p>This documentation may contain AI-generated content. While we strive for accuracy, there might be inaccuracies. Please report any issues via:</p> <ul> <li>GitHub Issues</li> <li>Community contribution (PRs welcome!)</li> </ul>"},{"location":"ImplementationDetails/ParagraphFinding/ParagraphFinding/#background","title":"Background","text":"<p>After PDF analysis, we need to identify paragraphs from individual characters. This is a crucial step before translation and typesetting, as it helps maintain the logical structure of the document.</p>"},{"location":"ImplementationDetails/ParagraphFinding/ParagraphFinding/#goal","title":"Goal","text":"<ol> <li>Group characters into meaningful paragraphs while preserving the document's logical structure</li> <li>Handle special cases like table of contents, short lines, and multi-line paragraphs</li> <li>Maintain layout information for later typesetting</li> </ol>"},{"location":"ImplementationDetails/ParagraphFinding/ParagraphFinding/#specific-implementation","title":"Specific Implementation","text":"<p>The paragraph finding process consists of four main steps:</p>"},{"location":"ImplementationDetails/ParagraphFinding/ParagraphFinding/#step-1-create-initial-paragraphs","title":"Step 1: Create Initial Paragraphs","text":"<ol> <li>Group characters into lines based on their spatial relationships</li> <li>Create paragraphs based on layout information and XObject IDs</li> <li>Characters that don't belong to text layouts are skipped</li> </ol>"},{"location":"ImplementationDetails/ParagraphFinding/ParagraphFinding/#step-2-process-paragraph-spacing","title":"Step 2: Process Paragraph Spacing","text":"<ol> <li>Remove completely empty lines</li> <li>Handle trailing spaces within lines</li> <li>Update paragraph boundary boxes and metadata</li> </ol>"},{"location":"ImplementationDetails/ParagraphFinding/ParagraphFinding/#step-3-calculate-line-width-statistics","title":"Step 3: Calculate Line Width Statistics","text":"<ol> <li>Calculate the median width of all lines</li> <li>This information is used for identifying potential paragraph breaks</li> </ol>"},{"location":"ImplementationDetails/ParagraphFinding/ParagraphFinding/#step-4-process-independent-paragraphs","title":"Step 4: Process Independent Paragraphs","text":"<ol> <li>Analyze paragraphs with multiple lines</li> <li>Split paragraphs in two cases:</li> <li>When encountering table of contents entries (identified by consecutive dots)</li> <li>When finding lines significantly shorter than the median width (configurable via <code>short_line_split_factor</code>)</li> </ol>"},{"location":"ImplementationDetails/ParagraphFinding/ParagraphFinding/#additional-features","title":"Additional Features","text":"<ol> <li>Layout-aware processing:</li> <li>Respects different layout types (plain text, title, figure caption, etc.)</li> <li> <p>Maintains layout priority order for overlapping regions</p> </li> <li> <p>First line indent detection:</p> </li> <li> <p>Automatically detects and marks paragraphs with first line indentation</p> </li> <li> <p>Flexible character position detection:</p> </li> <li>Uses multiple position detection modes (middle, topleft, bottomright)</li> <li>Special handling for characters with unreliable height information</li> </ol>"},{"location":"ImplementationDetails/ParagraphFinding/ParagraphFinding/#limitations","title":"Limitations","text":"<ol> <li> <p>The current implementation assumes left-to-right text direction</p> </li> <li> <p>May not perfectly handle complex layouts with overlapping regions</p> </li> <li> <p>Table of contents detection relies on consecutive dots pattern</p> </li> <li> <p>Short line splitting might occasionally create incorrect paragraph breaks</p> </li> </ol>"},{"location":"ImplementationDetails/ParagraphFinding/ParagraphFinding/#configuration-options","title":"Configuration Options","text":"<p>The paragraph finding behavior can be customized through <code>TranslationConfig</code>:</p> <ol> <li><code>split_short_lines</code>: Enable/disable splitting paragraphs at short lines</li> <li><code>short_line_split_factor</code>: Threshold factor for short line detection (relative to median width) </li> </ol>"},{"location":"ImplementationDetails/StylesAndFormulas/StylesAndFormulas/","title":"Styles and Formulas Processing","text":"<p>Note</p> <p>This documentation may contain AI-generated content. While we strive for accuracy, there might be inaccuracies. Please report any issues via:</p> <ul> <li>GitHub Issues</li> <li>Community contribution (PRs welcome!)</li> </ul>"},{"location":"ImplementationDetails/StylesAndFormulas/StylesAndFormulas/#background","title":"Background","text":"<p>After paragraph finding, we need to identify formulas and text styles within each paragraph. This step is crucial for maintaining mathematical expressions and text formatting during translation.</p>"},{"location":"ImplementationDetails/StylesAndFormulas/StylesAndFormulas/#goal","title":"Goal","text":"<ol> <li>Identify and preserve mathematical formulas</li> <li>Detect and maintain consistent text styles</li> <li>Handle special cases like subscripts and superscripts</li> <li>Calculate proper offsets for formula positioning</li> </ol>"},{"location":"ImplementationDetails/StylesAndFormulas/StylesAndFormulas/#specific-implementation","title":"Specific Implementation","text":"<p>The processing consists of several main steps:</p>"},{"location":"ImplementationDetails/StylesAndFormulas/StylesAndFormulas/#step-1-formula-detection","title":"Step 1: Formula Detection","text":"<ol> <li>Identify formula characters based on:</li> <li>Formula-specific fonts</li> <li>Special Unicode characters</li> <li>Vertical text</li> <li> <p>Corner marks (subscripts/superscripts)</p> </li> <li> <p>Group consecutive formula characters into formula units</p> </li> </ol>"},{"location":"ImplementationDetails/StylesAndFormulas/StylesAndFormulas/#step-2-formula-processing","title":"Step 2: Formula Processing","text":"<ol> <li>Process comma-containing formulas:</li> <li>Split complex formulas at commas when appropriate</li> <li>Preserve brackets and their contents</li> <li> <p>Convert simple number-only formulas to regular text</p> </li> <li> <p>Merge overlapping formulas:</p> </li> <li>Handle cases where subscripts/superscripts are detected as separate formulas</li> <li>Maintain proper character ordering</li> </ol>"},{"location":"ImplementationDetails/StylesAndFormulas/StylesAndFormulas/#step-3-style-analysis","title":"Step 3: Style Analysis","text":"<ol> <li>Calculate base style for each paragraph:</li> <li>Find common style attributes across all text</li> <li>Handle font variations</li> <li> <p>Process graphic states</p> </li> <li> <p>Group characters with identical styles:</p> </li> <li>Font properties</li> <li>Size properties</li> <li>Graphic state properties</li> </ol>"},{"location":"ImplementationDetails/StylesAndFormulas/StylesAndFormulas/#step-4-position-calculation","title":"Step 4: Position Calculation","text":"<ol> <li>Calculate formula offsets:</li> <li>Compute x-offset relative to surrounding text</li> <li>Compute y-offset for proper vertical alignment</li> <li>Handle line spacing variations</li> </ol>"},{"location":"ImplementationDetails/StylesAndFormulas/StylesAndFormulas/#additional-features","title":"Additional Features","text":"<ol> <li>Font mapping:</li> <li>Maps different fonts to standard ones</li> <li> <p>Special handling for formula fonts</p> </li> <li> <p>Style inheritance:</p> </li> <li>Maintains style hierarchy</li> <li> <p>Handles partial style overrides</p> </li> <li> <p>Formula classification:</p> </li> <li>Distinguishes between translatable and non-translatable formulas</li> <li>Special handling for numeric formulas with commas</li> </ol>"},{"location":"ImplementationDetails/StylesAndFormulas/StylesAndFormulas/#limitations","title":"Limitations","text":"<ol> <li> <p>Formula detection relies on font and character patterns</p> </li> <li> <p>May not handle all types of mathematical notations</p> </li> <li> <p>Complex subscript/superscript combinations might be misidentified</p> </li> <li> <p>Limited support for vertical formulas</p> </li> </ol>"},{"location":"ImplementationDetails/StylesAndFormulas/StylesAndFormulas/#configuration-options","title":"Configuration Options","text":"<p>The formula and style processing can be customized through <code>TranslationConfig</code>:</p> <ol> <li><code>formular_font_pattern</code>: Regex pattern for identifying formula fonts</li> <li><code>formular_char_pattern</code>: Regex pattern for identifying formula characters </li> </ol>"},{"location":"ImplementationDetails/Typesetting/Typesetting/","title":"Typography","text":"<p>Note</p> <p>This documentation may contain AI-generated content. While we strive for accuracy, there might be inaccuracies. Please report any issues via:</p> <ul> <li>GitHub Issues</li> <li>Community contribution (PRs welcome!)</li> </ul>"},{"location":"ImplementationDetails/Typesetting/Typesetting/#background","title":"Background","text":"<p>After translation, text needs to be typeset before placing into PDF.</p> <p>Translated paragraphs can contain any combination of the following types:</p> <ol> <li> <p>PDF formulas</p> </li> <li> <p>Single PDF original character</p> </li> <li> <p>PDF original string with same style</p> </li> <li> <p>Translated Unicode string with same style</p> </li> </ol> <p>Let's discuss different cases:</p> <p>For the following 3 types, they can be directly transmitted transparently to new positions:</p> <ol> <li> <p>PDF formulas</p> </li> <li> <p>Single PDF original character</p> </li> <li> <p>PDF original string with same style</p> </li> </ol> <p>Only \"translated Unicode string with same style\" needs typesetting operation, as this step loses original layout information. However, since paragraphs may contain other components that need transparent transmission, their positions may also change and need to participate in typesetting.</p>"},{"location":"ImplementationDetails/Typesetting/Typesetting/#goal","title":"Goal","text":"<p>Try to fit all components within the original paragraph bounding box. If impossible, try to expand the bounding box in writing direction.</p>"},{"location":"ImplementationDetails/Typesetting/Typesetting/#specific-implementation","title":"Specific Implementation","text":"<p>First perform reflow judgment to determine if the paragraph needs reflow. If all elements can be transmitted transparently, no reflow is needed. Then, if reflow is needed, execute Algorithm 1:</p> <ol> <li> <p>Convert all elements to typesetting unit type, which records length and width information.</p> </li> <li> <p>Start from top-left of original paragraph bounding box, place elements sequentially.</p> </li> <li> <p>If current line cannot fit next element, wrap to next line.</p> </li> <li> <p>Repeat 2-3 until all elements are placed or exceed original bounding box.</p> </li> </ol> <p>Algorithm 1 works normally when translated text is shorter than original. When translated text is longer, Algorithm 2 needs to be added:</p> <ol> <li> <p>Initialize element scaling factor as 1.0.</p> </li> <li> <p>Initialize line spacing as 1.5.</p> </li> <li> <p>Try typesetting using Algorithm 1.</p> </li> <li> <p>If it cannot fit all elements:</p> </li> <li> <p>First try to reduce line spacing by 0.1 step until reaching minimum line spacing (1.4)</p> </li> <li>If still cannot fit:<ul> <li>When scale &gt; 0.6, reduce element scaling by 0.05</li> <li>When scale &lt;= 0.6, reduce element scaling by 0.1</li> <li>Reset line spacing to 1.5</li> </ul> </li> <li> <p>When scale becomes less than 0.7, adjust minimum line spacing to 1.1</p> </li> <li> <p>Report error if element scaling is less than 0.1.</p> </li> </ol> <p>Algorithm 2 can fit translations of almost all languages in original position.</p> <p>However, for special cases like \"\u56fe 1\" translated to \"Figure 1\", even with the above algorithms some text may still overflow. So Algorithm 3:</p> <ol> <li> <p>Before reducing scale, first try to expand the bounding box in writing direction.</p> </li> <li> <p>Calculate paragraph's right whitespace by:</p> </li> <li> <p>Using 90% of page crop box width as maximum limit</p> </li> <li>Checking for overlapping paragraphs on the right</li> <li> <p>Checking for overlapping figures on the right</p> </li> <li> <p>Expand paragraph bounding box based on available whitespace.</p> </li> <li> <p>If still cannot fit all elements, continue with scale reduction as in Algorithm 2.</p> </li> </ol>"},{"location":"ImplementationDetails/Typesetting/Typesetting/#additional-features","title":"Additional Features","text":"<ol> <li>Mixed Chinese-English text handling:</li> <li>Adds 0.5 character width spacing between Chinese and English text transitions</li> <li>Excludes certain punctuation marks from this spacing rule</li> <li> <p>First line indent:</p> </li> <li> <p>Adds 2 Chinese characters width indent for the first line when specified</p> </li> <li> <p>Hanging punctuation:</p> </li> <li>Allows certain punctuation marks to extend beyond the right margin</li> <li>Helps maintain better visual alignment</li> </ol>"},{"location":"ImplementationDetails/Typesetting/Typesetting/#limitations","title":"Limitations","text":"<ol> <li> <p>Currently, we use PDFPlumber for PDF analysis, this is only implemented for paragraphs, only handles left-to-right writing.</p> </li> <li> <p>Cannot handle table of contents alignment by dots.</p> </li> <li> <p>Poor performance, needs optimization.</p> </li> <li> <p>No global page information consideration, inconsistent text sizes.</p> </li> <li> <p>No advanced typography features, poor reading experience.</p> </li> </ol>"},{"location":"ImplementationDetails/Typesetting/Typesetting/#related-resources","title":"Related Resources","text":"<p>UTR #59: East Asian Spacing specifies which characters need spacing between them.</p>"}]}